# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt-hotspot'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and analyze
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: build performanceTest sonarqube

      - name: Upload test and analysis result
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: lib/build/reports/**/*

      - uses: codecov/codecov-action@v2
        with:
          file: lib/build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true

      - name: Publish library to maven central
        id: publish
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY_SECRET }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhToken: ${{ secrets.OSSRH_TOKEN }}
        run: |
          export ORG_GRADLE_PROJECT_libVersion=${GITHUB_REF#refs/tags/v}
          ./gradlew publish -Prelease=true
